
environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_compiler.cmd"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.

    - PYTHON: "C:\\Miniconda"
      PYTHON_VERSION: "2.7"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Miniconda35"
      PYTHON_VERSION: "3.5"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "35"
      CONDA_NPY: "110"

    - PYTHON: "C:\\Miniconda36"
      PYTHON_VERSION: "3.6"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "36"
      CONDA_NPY: "112"

    - PYTHON: "C:\\Miniconda37"
      PYTHON_VERSION: "3.7"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "37"
      CONDA_NPY: "116"

    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "35"
      CONDA_NPY: "110"

    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      CONDA_NPY: "112"

    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "3.7"
      FFMPEG_VERSION: "3.2.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "37"
      CONDA_NPY: "116"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Prepend to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%CONDA_ROOT%\\Library\\bin;%PATH%"

  # Install dependencies
  - conda config --set always_yes true
  - conda config --add channels conda-forge
  - conda update conda
  - conda install --yes conda-build jinja2 anaconda-client
  - conda create -q -n test-environment python=%PYTHON_VERSION%
    pip "setuptools>=0.24" Pillow "Cython>=0.27"
    "numpy>=1.9" "wheel>=0.24" ffmpeg=%FFMPEG_VERSION% msinttypes
  - activate test-environment

  # workaround for missing vcvars64.bat in py34 64bit
  # - "cp appveyor/vcvars64.bat \"C:/Program Files (x86)/Microsoft Visual Studio 10.0/VC/bin/amd64\""

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

build: false  # Not a C# project, build stuff at the test step instead.

before_test:
  # Need to build before tests
  - "%CMD_IN_ENV% python setup.py build_ext --inplace --ffmpeg-dir=%CONDA_PREFIX%\\Library"

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% python setup.py test"

after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
